{"dependencies":[{"name":"axios"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _axios = require(\"axios\");\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar getData = function getData(args) {\n  return new Promise(function (resolve, reject) {\n    (0, _axios2.default)({\n      url: 'https://chat.pipk.top/graphql',\n      method: 'post',\n      // url: `https://api.github.com/graphql`,\n      // method: 'post',\n      // headers: {\n      //   'Authorization': `bearer ${process.env.access_token}`,\n      //   'Content-Type': 'application/json'\n      // },\n      data: {\n        query: \"{\\n            search(query: \\\"\" + (args.name || 'pengliheng') + \"\\\", type: USER, first: 1) {    \\n              edges {\\n                node {\\n                  ... on User {\\n                    avatarUrl login bio url createdAt\\n                    contributedRepositories(first: 100,orderBy: {field: CREATED_AT, direction: DESC}) {\\n                      totalCount\\n                      nodes{\\n                        nameWithOwner url\\n                      }\\n                    }\\n                    starredRepositories(first:100) {\\n                      nodes {\\n                        primaryLanguage {\\n                          name color\\n                        }\\n                      }\\n                    }\\n                    followers(first: 100) {\\n                      totalCount\\n                      nodes {\\n                        url name avatarUrl\\n                      }\\n                    }\\n                    following(first: 100) {\\n                      totalCount\\n                      nodes {\\n                        url name avatarUrl\\n                      }\\n                    }\\n                    repositories(first:100,orderBy: {field: STARGAZERS, direction: DESC}){\\n                      totalCount\\n                      nodes{\\n                        createdAt updatedAt isFork name url\\n                        primaryLanguage {\\n                          name\\n                        }\\n                        forks(first:0){\\n                          totalCount\\n                        }\\n                        stargazers(first:0){\\n                          totalCount\\n                        }\\n                      }\\n                    }\\n                  }\\n                }\\n              }\\n            }\\n          }\"\n      }\n    }).then(function (res) {\n      return resolve(res.data.data);\n    }).catch(function (err) {\n      return reject(err);\n    });\n  });\n};\n\nexports.default = getData;"},"hash":"0ec34cbb43a4022fab1fa0a3f1d56631"}