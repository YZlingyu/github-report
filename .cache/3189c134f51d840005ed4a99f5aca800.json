{"dependencies":[{"name":"react"},{"name":"./index.less"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _index = require(\"./index.less\");\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Render = function (_React$Component) {\n  _inherits(Render, _React$Component);\n\n  function Render(props) {\n    _classCallCheck(this, Render);\n\n    var _this = _possibleConstructorReturn(this, (Render.__proto__ || Object.getPrototypeOf(Render)).call(this, props));\n\n    _this.state = { date: new Date().getSeconds() % 3 };\n    return _this;\n  }\n\n  _createClass(Render, [{\n    key: \"tick\",\n    value: function tick() {\n      this.setState({\n        date: new Date().getSeconds() % 3\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.timerID = setInterval(function () {\n        return _this2.tick();\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var date = this.state.date;\n\n      return _react2.default.createElement(\n        \"h1\",\n        { className: \"loading\" },\n        \"Loading\",\n        '...'.substring(0, date + 1)\n      );\n    }\n  }]);\n\n  return Render;\n}(_react2.default.Component);\n\nexports.default = Render;\n;"},"hash":"114cc97d8082138765639fb01851f7b4"}